const { User, Account, TodoList, TodoItem } = require("../models");
const { connectDB, disconnectDB } = require("../config/database");

const seedData = async () => {
  try {
    console.log("üå± B·∫Øt ƒë·∫ßu seed d·ªØ li·ªáu...");

    // K·∫øt n·ªëi database
    await connectDB();

    // X√≥a d·ªØ li·ªáu c≈© (optional)
    await User.deleteMany({});
    await Account.deleteMany({});
    await TodoList.deleteMany({});
    await TodoItem.deleteMany({});

    console.log("‚úÖ ƒê√£ x√≥a d·ªØ li·ªáu c≈©");

    // T·∫°o users
    const user1 = await User.create({
      name: "Nguy·ªÖn VƒÉn A",
      gender: "M",
      dob: new Date("1990-01-15"),
    });

    const user2 = await User.create({
      name: "Tr·∫ßn Th·ªã B",
      gender: "F",
      dob: new Date("1995-05-20"),
    });

    console.log("‚úÖ ƒê√£ t·∫°o users");

    // T·∫°o accounts
    await Account.create({
      user_id: user1._id,
      username: "nguyenvana",
      hashedPassword: "$2b$10$example.hash.password",
      status: "active",
    });

    await Account.create({
      user_id: user2._id,
      username: "tranthib",
      hashedPassword: "$2b$10$example.hash.password",
      status: "active",
    });

    console.log("‚úÖ ƒê√£ t·∫°o accounts");

    // T·∫°o todo lists
    const todoList1 = await TodoList.create({
      name: "C√¥ng vi·ªác h√†ng ng√†y",
      user_id: user1._id,
      status: "unfinished",
    });

    const todoList2 = await TodoList.create({
      name: "D·ª± √°n web",
      user_id: user1._id,
      status: "unfinished",
    });

    const todoList3 = await TodoList.create({
      name: "H·ªçc t·∫≠p",
      user_id: user2._id,
      status: "unfinished",
    });

    console.log("‚úÖ ƒê√£ t·∫°o todo lists");

    // T·∫°o todo items
    await TodoItem.create({
      todo_group_id: todoList1._id,
      name: "ƒê·ªçc email",
      des: "Ki·ªÉm tra v√† tr·∫£ l·ªùi email quan tr·ªçng",
      due_at: new Date(Date.now() + 2 * 60 * 60 * 1000), // 2 gi·ªù n·ªØa
      status: "todo",
    });

    await TodoItem.create({
      todo_group_id: todoList1._id,
      name: "H·ªçp team",
      des: "H·ªçp ƒë·ªãnh k·ª≥ v·ªõi team v·ªÅ ti·∫øn ƒë·ªô d·ª± √°n",
      due_at: new Date(Date.now() + 4 * 60 * 60 * 1000), // 4 gi·ªù n·ªØa
      status: "in-progress",
    });

    await TodoItem.create({
      todo_group_id: todoList1._id,
      name: "L√†m b√°o c√°o",
      des: "Ho√†n th√†nh b√°o c√°o tu·∫ßn",
      due_at: new Date(Date.now() - 24 * 60 * 60 * 1000), // 1 ng√†y tr∆∞·ªõc
      status: "finish",
    });

    await TodoItem.create({
      todo_group_id: todoList2._id,
      name: "Thi·∫øt k·∫ø UI",
      des: "Thi·∫øt k·∫ø giao di·ªán ng∆∞·ªùi d√πng cho ·ª©ng d·ª•ng",
      due_at: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000), // 3 ng√†y n·ªØa
      status: "todo",
    });

    await TodoItem.create({
      todo_group_id: todoList2._id,
      name: "Code backend API",
      des: "Vi·∫øt API cho ·ª©ng d·ª•ng web",
      due_at: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000), // 5 ng√†y n·ªØa
      status: "in-progress",
    });

    await TodoItem.create({
      todo_group_id: todoList3._id,
      name: "H·ªçc React",
      des: "T√¨m hi·ªÉu v·ªÅ React hooks v√† context",
      due_at: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000), // 7 ng√†y n·ªØa
      status: "todo",
    });

    await TodoItem.create({
      todo_group_id: todoList3._id,
      name: "L√†m b√†i t·∫≠p Node.js",
      des: "Ho√†n th√†nh b√†i t·∫≠p v·ªÅ Express.js v√† MongoDB",
      due_at: new Date(Date.now() + 2 * 24 * 60 * 60 * 1000), // 2 ng√†y n·ªØa
      status: "todo",
    });

    console.log("‚úÖ ƒê√£ t·∫°o todo items");

    // Hi·ªÉn th·ªã th·ªëng k√™
    const userCount = await User.countDocuments();
    const accountCount = await Account.countDocuments();
    const todoListCount = await TodoList.countDocuments();
    const todoItemCount = await TodoItem.countDocuments();

    console.log("\nüìä Th·ªëng k√™ d·ªØ li·ªáu ƒë√£ seed:");
    console.log(`üë• Users: ${userCount}`);
    console.log(`üîê Accounts: ${accountCount}`);
    console.log(`üìã Todo Lists: ${todoListCount}`);
    console.log(`‚úÖ Todo Items: ${todoItemCount}`);

    console.log("\nüéâ Seed d·ªØ li·ªáu th√†nh c√¥ng!");
  } catch (error) {
    console.error("‚ùå L·ªói khi seed d·ªØ li·ªáu:", error.message);
  } finally {
    await disconnectDB();
  }
};

// Ch·∫°y seed n·∫øu ƒë∆∞·ª£c g·ªçi tr·ª±c ti·∫øp
if (require.main === module) {
  seedData();
}

module.exports = seedData;
