const axios = require("axios");

const BASE_URL = "http://localhost:3000/api";

// Helper function ƒë·ªÉ test API
async function testAPI() {
  console.log("üß™ B·∫Øt ƒë·∫ßu test Todo API...\n");

  try {
    // 1. Test l·∫•y t·∫•t c·∫£ todos
    console.log("1Ô∏è‚É£ Test GET /api/todos");
    const getAllResponse = await axios.get(`${BASE_URL}/todos`);
    console.log(
      "‚úÖ L·∫•y t·∫•t c·∫£ todos:",
      getAllResponse.data.data.length,
      "todos"
    );
    console.log(
      "üìã Todos:",
      getAllResponse.data.data.map((t) => ({
        id: t.id,
        title: t.title,
        completed: t.completed,
      }))
    );
    console.log("");

    // 2. Test t·∫°o todo m·ªõi
    console.log("2Ô∏è‚É£ Test POST /api/todos");
    const newTodo = {
      title: "Test Todo t·ª´ API",
      description: "ƒê√¢y l√† todo ƒë∆∞·ª£c t·∫°o t·ª´ test script",
    };
    const createResponse = await axios.post(`${BASE_URL}/todos`, newTodo);
    console.log("‚úÖ T·∫°o todo th√†nh c√¥ng:", createResponse.data.data.title);
    console.log("üÜî ID m·ªõi:", createResponse.data.data.id);
    console.log("");

    // 3. Test l·∫•y todo theo ID
    console.log("3Ô∏è‚É£ Test GET /api/todos/:id");
    const todoId = createResponse.data.data.id;
    const getByIdResponse = await axios.get(`${BASE_URL}/todos/${todoId}`);
    console.log("‚úÖ L·∫•y todo theo ID:", getByIdResponse.data.data.title);
    console.log("");

    // 4. Test c·∫≠p nh·∫≠t todo
    console.log("4Ô∏è‚É£ Test PUT /api/todos/:id");
    const updateData = {
      title: "Todo ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t",
      description: "M√¥ t·∫£ m·ªõi cho todo",
      completed: true,
    };
    const updateResponse = await axios.put(
      `${BASE_URL}/todos/${todoId}`,
      updateData
    );
    console.log("‚úÖ C·∫≠p nh·∫≠t todo th√†nh c√¥ng:", updateResponse.data.data.title);
    console.log("‚úÖ Tr·∫°ng th√°i completed:", updateResponse.data.data.completed);
    console.log("");

    // 5. Test toggle tr·∫°ng th√°i
    console.log("5Ô∏è‚É£ Test PATCH /api/todos/:id/toggle");
    const toggleResponse = await axios.patch(
      `${BASE_URL}/todos/${todoId}/toggle`
    );
    console.log("‚úÖ Toggle tr·∫°ng th√°i th√†nh c√¥ng");
    console.log("‚úÖ Tr·∫°ng th√°i m·ªõi:", toggleResponse.data.data.completed);
    console.log("");

    // 6. Test filter v√† search
    console.log("6Ô∏è‚É£ Test filter v√† search");
    const filterResponse = await axios.get(`${BASE_URL}/todos?completed=false`);
    console.log("‚úÖ Todos ch∆∞a ho√†n th√†nh:", filterResponse.data.data.length);

    const searchResponse = await axios.get(`${BASE_URL}/todos?search=test`);
    console.log('‚úÖ Todos c√≥ t·ª´ kh√≥a "test":', searchResponse.data.data.length);
    console.log("");

    // 7. Test th·ªëng k√™ (tr∆∞·ªõc khi x√≥a todo)
    console.log("7Ô∏è‚É£ Test GET /api/todos/stats");
    const statsResponse = await axios.get(`${BASE_URL}/todos/stats`);
    console.log("‚úÖ Th·ªëng k√™ todos:");
    console.log("   üìä T·ªïng s·ªë:", statsResponse.data.data.total);
    console.log("   ‚úÖ ƒê√£ ho√†n th√†nh:", statsResponse.data.data.completed);
    console.log("   ‚è≥ Ch∆∞a ho√†n th√†nh:", statsResponse.data.data.pending);
    console.log(
      "   üìà T·ª∑ l·ªá ho√†n th√†nh:",
      statsResponse.data.data.completionRate
    );
    console.log("");

    // 8. Test x√≥a todo
    console.log("8Ô∏è‚É£ Test DELETE /api/todos/:id");
    const deleteResponse = await axios.delete(`${BASE_URL}/todos/${todoId}`);
    console.log("‚úÖ X√≥a todo th√†nh c√¥ng:", deleteResponse.data.data.title);
    console.log("");

    // 9. Ki·ªÉm tra l·∫°i danh s√°ch
    console.log("9Ô∏è‚É£ Ki·ªÉm tra l·∫°i danh s√°ch sau khi x√≥a");
    const finalResponse = await axios.get(`${BASE_URL}/todos`);
    console.log("‚úÖ S·ªë todos c√≤n l·∫°i:", finalResponse.data.data.length);
    console.log("");

    // 10. Test th·ªëng k√™ sau khi x√≥a
    console.log("üîü Test th·ªëng k√™ sau khi x√≥a todo");
    const finalStatsResponse = await axios.get(`${BASE_URL}/todos/stats`);
    console.log("‚úÖ Th·ªëng k√™ cu·ªëi c√πng:");
    console.log("   üìä T·ªïng s·ªë:", finalStatsResponse.data.data.total);
    console.log("   ‚úÖ ƒê√£ ho√†n th√†nh:", finalStatsResponse.data.data.completed);
    console.log("   ‚è≥ Ch∆∞a ho√†n th√†nh:", finalStatsResponse.data.data.pending);
    console.log(
      "   üìà T·ª∑ l·ªá ho√†n th√†nh:",
      finalStatsResponse.data.data.completionRate
    );
    console.log("");

    console.log("üéâ T·∫•t c·∫£ tests ƒë√£ ho√†n th√†nh th√†nh c√¥ng!");
  } catch (error) {
    console.error(
      "‚ùå L·ªói trong qu√° tr√¨nh test:",
      error.response?.data || error.message
    );
  }
}

// Ch·∫°y test n·∫øu server ƒëang ch·∫°y
testAPI();
